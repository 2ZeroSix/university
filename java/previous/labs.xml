<?xml version="1.0" encoding="UTF-8"?>
<project name="labs" default="all">
  
  
  <property file="labs.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.egg"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
    <include name="*.swc"/>
    <include name="*.war"/>
    <include name="*.ane"/>
    <include name="*.zip"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.8" value="${jdk.home.1.8}/bin"/>
  <path id="jdk.classpath.1.8">
    <fileset dir="${jdk.home.1.8}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/ext/cldrdata.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/icedtea-sound.jar"/>
      <include name="jre/lib/ext/jaccess.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/nashorn.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="../../../share/java/logback-core.jar"/>
      <include name="../../../share/java/logback-classic.jar"/>
      <include name="../../../share/java/slf4j-api.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.8}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.8}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.8"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.com.googlecode.lanterna:lanterna:3.0.0-rc1.classpath">
    <pathelement location="${basedir}/lib/lanterna-3.0.0-rc1.jar"/>
  </path>
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <pathelement location="${javac2.home}/javac2.jar"/>
    <pathelement location="${javac2.home}/jdom.jar"/>
    <pathelement location="${javac2.home}/asm-all.jar"/>
    <pathelement location="${javac2.home}/jgoodies-forms.jar"/>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  
  <!-- Module lab1 -->
  
  <dirname property="module.lab1.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.lab1" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.lab1" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.lab1" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.lab1" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="lab1.output.dir" value="${module.lab1.basedir}/out/production/lab1"/>
  <property name="lab1.testoutput.dir" value="${module.lab1.basedir}/out/test/lab1"/>
  
  <path id="lab1.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="lab1.module.production.classpath">
    <path refid="${module.jdk.classpath.lab1}"/>
  </path>
  
  <path id="lab1.runtime.production.module.classpath">
    <pathelement location="${lab1.output.dir}"/>
  </path>
  
  <path id="lab1.module.classpath">
    <path refid="${module.jdk.classpath.lab1}"/>
    <pathelement location="${lab1.output.dir}"/>
  </path>
  
  <path id="lab1.runtime.module.classpath">
    <pathelement location="${lab1.testoutput.dir}"/>
    <pathelement location="${lab1.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.lab1">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.lab1">
    <patternset refid="excluded.from.module.lab1"/>
  </patternset>
  
  <path id="lab1.module.sourcepath">
    <dirset dir="${module.lab1.basedir}/../new/lab1">
      <include name="src"/>
      <include name="rsrc"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.lab1" depends="compile.module.lab1.production,compile.module.lab1.tests" description="Compile module lab1"/>
  
  <target name="compile.module.lab1.production" depends="register.custom.compilers" description="Compile module lab1; production classes">
    <mkdir dir="${lab1.output.dir}"/>
    <javac2 destdir="${lab1.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.lab1}/javac">
      <compilerarg line="${compiler.args.lab1}"/>
      <bootclasspath refid="lab1.module.bootclasspath"/>
      <classpath refid="lab1.module.production.classpath"/>
      <src refid="lab1.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.lab1"/>
    </javac2>
    
    <copy todir="${lab1.output.dir}">
      <fileset dir="${module.lab1.basedir}/../new/lab1/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.lab1.basedir}/../new/lab1/rsrc">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.lab1.tests" depends="register.custom.compilers,compile.module.lab1.production" description="compile module lab1; test classes" unless="skip.tests"/>
  
  <target name="clean.module.lab1" description="cleanup module">
    <delete dir="${lab1.output.dir}"/>
    <delete dir="${lab1.testoutput.dir}"/>
  </target>
  
  
  <!-- Module lab2 -->
  
  <dirname property="module.lab2.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.lab2" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.lab2" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.lab2" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.lab2" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="lab2.output.dir" value="${module.lab2.basedir}/out/production/lab2"/>
  <property name="lab2.testoutput.dir" value="${module.lab2.basedir}/out/test/lab2"/>
  
  <path id="lab2.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="lab2.module.production.classpath">
    <path refid="${module.jdk.classpath.lab2}"/>
    <path refid="library.com.googlecode.lanterna:lanterna:3.0.0-rc1.classpath"/>
  </path>
  
  <path id="lab2.runtime.production.module.classpath">
    <pathelement location="${lab2.output.dir}"/>
    <path refid="library.com.googlecode.lanterna:lanterna:3.0.0-rc1.classpath"/>
  </path>
  
  <path id="lab2.module.classpath">
    <path refid="${module.jdk.classpath.lab2}"/>
    <pathelement location="${lab2.output.dir}"/>
    <path refid="library.com.googlecode.lanterna:lanterna:3.0.0-rc1.classpath"/>
  </path>
  
  <path id="lab2.runtime.module.classpath">
    <pathelement location="${lab2.testoutput.dir}"/>
    <pathelement location="${lab2.output.dir}"/>
    <path refid="library.com.googlecode.lanterna:lanterna:3.0.0-rc1.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.lab2">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.lab2">
    <patternset refid="excluded.from.module.lab2"/>
  </patternset>
  
  <path id="lab2.module.sourcepath">
    <dirset dir="${module.lab2.basedir}/../new/lab2">
      <include name="src"/>
      <include name="rsrc"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.lab2" depends="compile.module.lab2.production,compile.module.lab2.tests" description="Compile module lab2"/>
  
  <target name="compile.module.lab2.production" depends="register.custom.compilers" description="Compile module lab2; production classes">
    <mkdir dir="${lab2.output.dir}"/>
    <javac2 destdir="${lab2.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.lab2}/javac">
      <compilerarg line="${compiler.args.lab2}"/>
      <bootclasspath refid="lab2.module.bootclasspath"/>
      <classpath refid="lab2.module.production.classpath"/>
      <src refid="lab2.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.lab2"/>
    </javac2>
    
    <copy todir="${lab2.output.dir}">
      <fileset dir="${module.lab2.basedir}/../new/lab2/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.lab2.basedir}/../new/lab2/rsrc">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.lab2.tests" depends="register.custom.compilers,compile.module.lab2.production" description="compile module lab2; test classes" unless="skip.tests"/>
  
  <target name="clean.module.lab2" description="cleanup module">
    <delete dir="${lab2.output.dir}"/>
    <delete dir="${lab2.testoutput.dir}"/>
  </target>
  
  
  <!-- Module task1 -->
  
  <dirname property="module.task1.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.task1" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.task1" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.task1" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.task1" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="task1.output.dir" value="${module.task1.basedir}/out/production/task1"/>
  <property name="task1.testoutput.dir" value="${module.task1.basedir}/out/test/task1"/>
  
  <path id="task1.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="task1.module.production.classpath">
    <path refid="${module.jdk.classpath.task1}"/>
  </path>
  
  <path id="task1.runtime.production.module.classpath">
    <pathelement location="${task1.output.dir}"/>
  </path>
  
  <path id="task1.module.classpath">
    <path refid="${module.jdk.classpath.task1}"/>
    <pathelement location="${task1.output.dir}"/>
  </path>
  
  <path id="task1.runtime.module.classpath">
    <pathelement location="${task1.testoutput.dir}"/>
    <pathelement location="${task1.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.task1">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.task1">
    <patternset refid="excluded.from.module.task1"/>
  </patternset>
  
  <path id="task1.module.sourcepath">
    <dirset dir="${module.task1.basedir}/task1">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.task1" depends="compile.module.task1.production,compile.module.task1.tests" description="Compile module task1"/>
  
  <target name="compile.module.task1.production" depends="register.custom.compilers" description="Compile module task1; production classes">
    <mkdir dir="${task1.output.dir}"/>
    <javac2 destdir="${task1.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.task1}/javac">
      <compilerarg line="${compiler.args.task1}"/>
      <bootclasspath refid="task1.module.bootclasspath"/>
      <classpath refid="task1.module.production.classpath"/>
      <src refid="task1.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.task1"/>
    </javac2>
    
    <copy todir="${task1.output.dir}">
      <fileset dir="${module.task1.basedir}/task1/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.task1.tests" depends="register.custom.compilers,compile.module.task1.production" description="compile module task1; test classes" unless="skip.tests"/>
  
  <target name="clean.module.task1" description="cleanup module">
    <delete dir="${task1.output.dir}"/>
    <delete dir="${task1.testoutput.dir}"/>
  </target>
  
  
  <!-- Module task2 -->
  
  <dirname property="module.task2.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.task2" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.task2" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.task2" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.task2" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="task2.output.dir" value="${module.task2.basedir}/out/production/task2"/>
  <property name="task2.testoutput.dir" value="${module.task2.basedir}/out/test/task2"/>
  
  <path id="task2.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="task2.module.production.classpath">
    <path refid="${module.jdk.classpath.task2}"/>
  </path>
  
  <path id="task2.runtime.production.module.classpath">
    <pathelement location="${task2.output.dir}"/>
  </path>
  
  <path id="task2.module.classpath">
    <path refid="${module.jdk.classpath.task2}"/>
    <pathelement location="${task2.output.dir}"/>
  </path>
  
  <path id="task2.runtime.module.classpath">
    <pathelement location="${task2.testoutput.dir}"/>
    <pathelement location="${task2.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.task2">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.task2">
    <patternset refid="excluded.from.module.task2"/>
  </patternset>
  
  <path id="task2.module.sourcepath">
    <dirset dir="${module.task2.basedir}/task2">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.task2" depends="compile.module.task2.production,compile.module.task2.tests" description="Compile module task2"/>
  
  <target name="compile.module.task2.production" depends="register.custom.compilers" description="Compile module task2; production classes">
    <mkdir dir="${task2.output.dir}"/>
    <javac2 destdir="${task2.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.task2}/javac">
      <compilerarg line="${compiler.args.task2}"/>
      <bootclasspath refid="task2.module.bootclasspath"/>
      <classpath refid="task2.module.production.classpath"/>
      <src refid="task2.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.task2"/>
    </javac2>
    
    <copy todir="${task2.output.dir}">
      <fileset dir="${module.task2.basedir}/task2/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.task2.tests" depends="register.custom.compilers,compile.module.task2.production" description="compile module task2; test classes" unless="skip.tests"/>
  
  <target name="clean.module.task2" description="cleanup module">
    <delete dir="${task2.output.dir}"/>
    <delete dir="${task2.testoutput.dir}"/>
  </target>
  
  
  <!-- Module task3 -->
  
  <dirname property="module.task3.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.task3" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.task3" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.task3" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.task3" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="task3.output.dir" value="${module.task3.basedir}/out/production/task3"/>
  <property name="task3.testoutput.dir" value="${module.task3.basedir}/out/test/task3"/>
  
  <path id="task3.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="task3.module.production.classpath">
    <path refid="${module.jdk.classpath.task3}"/>
  </path>
  
  <path id="task3.runtime.production.module.classpath">
    <pathelement location="${task3.output.dir}"/>
  </path>
  
  <path id="task3.module.classpath">
    <path refid="${module.jdk.classpath.task3}"/>
    <pathelement location="${task3.output.dir}"/>
  </path>
  
  <path id="task3.runtime.module.classpath">
    <pathelement location="${task3.testoutput.dir}"/>
    <pathelement location="${task3.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.task3">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.task3">
    <patternset refid="excluded.from.module.task3"/>
  </patternset>
  
  <path id="task3.module.sourcepath">
    <dirset dir="${module.task3.basedir}/task3">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.task3" depends="compile.module.task3.production,compile.module.task3.tests" description="Compile module task3"/>
  
  <target name="compile.module.task3.production" depends="register.custom.compilers" description="Compile module task3; production classes">
    <mkdir dir="${task3.output.dir}"/>
    <javac2 destdir="${task3.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.task3}/javac">
      <compilerarg line="${compiler.args.task3}"/>
      <bootclasspath refid="task3.module.bootclasspath"/>
      <classpath refid="task3.module.production.classpath"/>
      <src refid="task3.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.task3"/>
    </javac2>
    
    <copy todir="${task3.output.dir}">
      <fileset dir="${module.task3.basedir}/task3/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.task3.tests" depends="register.custom.compilers,compile.module.task3.production" description="compile module task3; test classes" unless="skip.tests"/>
  
  <target name="clean.module.task3" description="cleanup module">
    <delete dir="${task3.output.dir}"/>
    <delete dir="${task3.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.lab1, clean.module.lab2, clean.module.task1, clean.module.task2, clean.module.task3" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.lab1, compile.module.lab2, compile.module.task1, compile.module.task2, compile.module.task3" description="build all modules"/>
  
  <target name="all" depends="build.modules" description="build all"/>
</project>